<html><head><META http-equiv="Content-Type" content="text/html; charset=utf-8"><link rel="shortcut icon" href="../icons/favicon.ico"><link rel="stylesheet" type="text/css" href="../styles/branding.css"><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css"><script type="text/javascript" src="../scripts/branding.js"></script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><title>Commenter Service</title><meta name="Language" content="en-us"><meta name="Microsoft.Help.Id" content="01698620-4fc8-4cb0-bb42-5b3a84b8dd66"><meta name="Description" content="The Commenter package provides support for extensions to support the Comment and Uncomment commands in Visual Studio using MEF."><meta name="Microsoft.Help.ContentType" content="Concepts"><meta name="BrandingAware" content="'true'"><link type="text/css" rel="stylesheet" href="../styles/highlight.css"><script type="text/javascript" src="../scripts/highlight.js"></script><meta name="SelfBranded" content="true"></head><body onload="onLoad()"><header class="ux-header"><div class="header-top-bar">Tunnel Vision Labs' Base Extensions Library for Visual Studio</div></header><div class="OH_outerDiv" style="padding: 35px 20px 0 20px;"><div class="OH_leftNav" id="LeftNav">
  <div id="tocnav">
    <div class="toclevel0" data-toclevel="0" style="padding-left: 0px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="262e0a6e-ce5a-4f40-8f5e-3889dbb63784.htm" title="VS Base Extensions Library" tocid="roottoc">VS Base Extensions Library</a></div><div class="toclevel1" data-toclevel="1" style="padding-left: 13px;" data-childrenloaded="true"><a class="toc_expanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="69c59220-5eff-4177-a632-b7c1b4981501.htm" title="Packages" tocid="69c59220-5eff-4177-a632-b7c1b4981501">Packages</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><a class="toc_collapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="c2cfc56d-e966-492a-9b12-66c7d01e7146.htm" title="Shell Service Extensions" tocid="c2cfc56d-e966-492a-9b12-66c7d01e7146">Shell Service Extensions</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="9452cedb-1942-4d9b-b911-7ef1e882f421.htm" title="Output Window Service" tocid="9452cedb-1942-4d9b-b911-7ef1e882f421">Output Window Service</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="3d25ef44-296a-4523-8286-ce65f8b47c76.htm" title="Shell Utility Library" tocid="3d25ef44-296a-4523-8286-ce65f8b47c76">Shell Utility Library</a></div><div class="toclevel2" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="07a54f98-14af-49e8-96b4-7a15a7fcfe2d.htm" title="Text Editor Utility Library" tocid="07a54f98-14af-49e8-96b4-7a15a7fcfe2d">Text Editor Utility Library</a></div><div class="toclevel2 current" data-toclevel="2" style="padding-left: 26px;"><span class="toc_empty"></span><a data-tochassubtree="false" href="01698620-4fc8-4cb0-bb42-5b3a84b8dd66.htm" title="Commenter Service" tocid="01698620-4fc8-4cb0-bb42-5b3a84b8dd66">Commenter Service</a></div></div></div><div id="TocResize" class="OH_TocResize"><img id="ResizeImageIncrease" src="../icons/open.gif" onclick="onIncreaseToc()" alt="Expand" title="Expand"><img id="ResizeImageReset" src="../icons/close.gif" style="display:none" onclick="onResetToc()" alt="Minimize" title="Minimize"></div><div class="OH_outerContent" id="OuterContent" style="margin-left: 280px;"><h1 class="title">Commenter Service</h1><div id="mainSection"><div id="mainBody"><span class="introStyle"></span><div class="introduction"><p>
        The Commenter package provides support for extensions to support the Comment and Uncomment
        commands in Visual Studio using MEF.
      </p><p>
        Library Status: Under Development (not yet released)
      </p></div><a id="Installation"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Installation and Distribution</div></div><p>
          To ensure broad compatibility across a wide range of project configurations and Visual Studio versions, the
          Commenter Service is distributed through several different NuGet packages.
        </p><ul><li><p><a href="#ExtensionPackage">Commenter Service Extension</a>: Installation of this package
              is required to ensure the Commenter Service functionality is available to your extension within Visual
              Studio.
            </p></li><li><p><a href="#InterfacesPackage">Commenter Interfaces Library</a>: Installation of this package
              is required if your Visual Studio extension uses or provides any Commenter functionality.
            </p></li><li><p><a href="#TextUtility">Text Editor Utility Library</a>: Installation of this package is
              optional, as described below.
            </p></li></ul><a id="ExtensionPackage"></a><h4 class="subHeading">Commenter Service Extension</h4><div class="subsection"><p>
              In the project which creates your VSIX file (i.e. the project which contains the <em>source.extension.vsixmanifest</em>
              file, add a NuGet reference to the <span class="code">Tvl.VisualStudio.Commenter</span> package. After installing the NuGet package,
              you will need to configure your extension to inform Visual Studio of the dependency by including the following block in your
              <em>source.extension.vsixmanifest</em> file.
            </p><div class="alert"><table><tr><th><img src="../icons/alert_caution.gif" alt="Important note"> <strong>Important</strong></th></tr><tr><td><p>
                This code assumes the use of a "Version 1" VSIX manifest, targeting Visual Studio 2010 and newer. The reference declaration for
                a "Version 2" manifest may differ from the syntax provided here.
              </p></td></tr></table></div><div id="ID0EBGGAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EBGGAAABAA_tabs"><div id="ID0EBGGAAABAA_tab1" class="codeSnippetContainerTabSingle" dir="ltr" EnableCopyCode="true"><a xmlns="">XML</a></div></div><div id="ID0EBGGAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBGGAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EBGGAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EBGGAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EBGGAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EBGGAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Reference</span> <span class="highlight-xml-attribute-name">Id</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Tvl.VisualStudio.Commenter.F3FD3E6D-611C-4703-B160-0C425AAFBACF"</span><span class="highlight-xml-bracket">&gt;</span> 
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Name</span><span class="highlight-xml-bracket">&gt;</span>Visual Studio Commenter Services<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Name</span><span class="highlight-xml-bracket">&gt;</span> 
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">VsixPath</span><span class="highlight-xml-bracket">&gt;</span>Tvl.VisualStudio.Commenter.vsix<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">VsixPath</span><span class="highlight-xml-bracket">&gt;</span> 
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Reference</span><span class="highlight-xml-bracket">&gt;</span></pre></div><div id="ID0EBGGAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>&lt;Reference Id="Tvl.VisualStudio.Commenter.F3FD3E6D-611C-4703-B160-0C425AAFBACF"&gt; 
  &lt;Name&gt;Visual Studio Commenter Services&lt;/Name&gt; 
  &lt;VsixPath&gt;Tvl.VisualStudio.Commenter.vsix&lt;/VsixPath&gt; 
&lt;/Reference&gt;</pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EBGGAAABAA');</script><div class="alert"><table><tr><th><img src="../icons/alert_note.gif" alt="Note"> <strong>Note</strong></th></tr><tr><td><p>
                A future release of this extension may include a feature to configure the <em>source.extension.vsixmanifest</em>
                file automatically.
              </p></td></tr></table></div></div><a id="InterfacesPackage"></a><h4 class="subHeading">Commenter Interfaces Library</h4><div class="subsection"><p>
              The Commenter Interfaces Library should be installed in any package which uses the Commenter Service. The library is available
              under several different NuGet packages. Only one version of the library should be installed in a project, selected according
              to the specific version(s) of Visual Studio a project intends to support.
            </p><ul><li><p><span class="code">Tvl.VisualStudio.Commenter.Interfaces.10</span>: For projects which support Visual Studio 2010 and newer.
                  In particular, this package should be used in projects which depend on the <a href="http://www.nuget.org/packages/VSSDK.Text.10" target="_blank">VSSDK.Text.10</a> package.
                </p></li><li><p><span class="code">Tvl.VisualStudio.Commenter.Interfaces.11</span>: For projects which support Visual Studio 2012 and newer.
                  In particular, this package should be used in projects which depend on the <a href="http://www.nuget.org/packages/VSSDK.Text.11" target="_blank">VSSDK.Text.11</a> package.
                </p></li><li><p><span class="code">Tvl.VisualStudio.Commenter.Interfaces.12</span>: For projects which support Visual Studio 2013 and newer.
                  In particular, this package should be used in projects which depend on the <a href="http://www.nuget.org/packages/VSSDK.Text.12" target="_blank">VSSDK.Text.12</a> package.
                </p></li></ul></div><a id="TextUtility"></a><h4 class="subHeading">Text Editor Utility Library</h4><div class="subsection"><p>
              The <a href="07a54f98-14af-49e8-96b4-7a15a7fcfe2d.htm">Text Editor Utility Library</a> includes a default implementation of
              <a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenter.htm">ICommenter</a> which is suitable for most
              languages that use line and/or block comments. The installation instructions for this utility library should be followed for
              any project which needs to export a standard commenter component for a new content type.
            </p></div><a id="Use"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Using the Commenter Service</div></div><p>
          This services allows extension developers to easily support the Comment and Uncomment commands
          for new languages in Visual Studio.
        </p><h4 class="subHeading">Providing a Standard Commenter</h4><div class="subsection"><p>
              The easiest way to provide commenting features is to use the standard
              <a href="T_Tvl_VisualStudio_Text_Commenter_Commenter.htm">Commenter</a>
              implementation of the
              <a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenter.htm">ICommenter</a>
              interface. The following steps show how to create an instance of
              <a href="T_Tvl_VisualStudio_Text_Commenter_Commenter.htm">Commenter</a>
              and provide it to the Commenter Service by exporting an instance of
              <a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenterProvider.htm">ICommenterProvider</a>.
            </p><ol><li><p>
                  Create a new class derived from
                  <a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenterProvider.htm">ICommenterProvider</a>.
                  This class is exported using the MEF
                  <a href="http://msdn2.microsoft.com/en-us/library/dd234971" target="_blank">ExportAttribute</a>
                  for one or more specific content types using the
                  <a href="http://msdn2.microsoft.com/en-us/library/dd821104" target="_blank">ContentTypeAttribute</a>.
                  The commenter in the example supports C++-style line and block comments, for the
                  <span class="code">SimpleC</span> content type.
                </p><div id="ID0EACAAEAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EACAAEAAABAA_tabs"><div id="ID0EACAAEAAABAA_tab1" class="codeSnippetContainerTabActive" dir="ltr" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EACAAEAAABAA','C#','1','4');return false;">C#</a></div><div id="ID0EACAAEAAABAA_tab2" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EACAAEAAABAA_tab3" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>F#</a></div><div id="ID0EACAAEAAABAA_tab4" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>VB</a></div></div><div id="ID0EACAAEAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACAAEAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EACAAEAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EACAAEAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EACAAEAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EACAAEAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre>[Export(<span class="highlight-keyword">typeof</span>(ICommenterProvider))]
[ContentType(<span class="highlight-literal">"SimpleC"</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> SimpleCCommenterProvider : ICommenterProvider
{
    <span class="highlight-keyword">public</span> ICommenter GetCommenter(ITextView textView)
    {
        <span class="highlight-comment">// TODO: provide a commenter</span> 
        <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> NotImplementedException();
    }
}</pre></div><div id="ID0EACAAEAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>[Export(typeof(ICommenterProvider))]
[ContentType("SimpleC")]
public sealed class SimpleCCommenterProvider : ICommenterProvider
{
    public ICommenter GetCommenter(ITextView textView)
    {
        // TODO: provide a commenter 
        throw new NotImplementedException();
    }
}</pre></div><div id="ID0EACAAEAAABAA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EACAAEAAABAA_code_Plain_Div2" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EACAAEAAABAA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EACAAEAAABAA_code_Plain_Div3" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EACAAEAAABAA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EACAAEAAABAA_code_Plain_Div4" class="codeSnippetContainerCode" style="display: none"><pre></pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EACAAEAAABAA');</script></li><li><p>
                  Define the comment format(s) the commenter will support.
                </p><div id="ID0EABAAEAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EABAAEAAABAA_tabs"><div id="ID0EABAAEAAABAA_tab1" class="codeSnippetContainerTabActive" dir="ltr" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EABAAEAAABAA','C#','1','4');return false;">C#</a></div><div id="ID0EABAAEAAABAA_tab2" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EABAAEAAABAA_tab3" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>F#</a></div><div id="ID0EABAAEAAABAA_tab4" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>VB</a></div></div><div id="ID0EABAAEAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABAAEAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EABAAEAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EABAAEAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EABAAEAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EABAAEAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre><span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> LineCommentFormat LineCommentFormat =
    <span class="highlight-keyword">new</span> LineCommentFormat(<span class="highlight-literal">"//"</span>);
<span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> BlockCommentFormat BlockCommentFormat =
    <span class="highlight-keyword">new</span> BlockCommentFormat(<span class="highlight-literal">"/*"</span>, <span class="highlight-literal">"*/"</span>);</pre></div><div id="ID0EABAAEAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>private static readonly LineCommentFormat LineCommentFormat =
    new LineCommentFormat("//");
private static readonly BlockCommentFormat BlockCommentFormat =
    new BlockCommentFormat("/*", "*/");</pre></div><div id="ID0EABAAEAAABAA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EABAAEAAABAA_code_Plain_Div2" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EABAAEAAABAA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EABAAEAAABAA_code_Plain_Div3" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EABAAEAAABAA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EABAAEAAABAA_code_Plain_Div4" class="codeSnippetContainerCode" style="display: none"><pre></pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EABAAEAAABAA');</script></li><li><p>
                  Implement the
                  <a href="M_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenterProvider_GetCommenter.htm">GetCommenter(ITextView)</a>
                  method by returning an instance of
                  <a href="T_Tvl_VisualStudio_Text_Commenter_Commenter.htm">Commenter</a>. The
                  <a href="http://msdn2.microsoft.com/en-us/library/ee696334" target="_blank">ITextUndoHistoryRegistry</a>
                  service is imported in order for
                  <a href="T_Tvl_VisualStudio_Text_Commenter_Commenter.htm">Commenter</a>
                  to correctly support the Undo and Redo commands. The following code is the complete implementation of
                  <a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenterProvider.htm">ICommenterProvider</a>
                  required to support the Comment and Uncomment commands for a simple language.
                </p><div id="ID0EAAAAEAAABAA" class="codeSnippetContainer"><div class="codeSnippetContainerTabs" id="ID0EAAAAEAAABAA_tabs"><div id="ID0EAAAAEAAABAA_tab1" class="codeSnippetContainerTabActive" dir="ltr" EnableCopyCode="true"><a href="#" onclick="javascript:ChangeTab('ID0EAAAAEAAABAA','C#','1','4');return false;">C#</a></div><div id="ID0EAAAAEAAABAA_tab2" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>C++</a></div><div id="ID0EAAAAEAAABAA_tab3" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>F#</a></div><div id="ID0EAAAAEAAABAA_tab4" class="codeSnippetContainerTabPhantom" dir="ltr" EnableCopyCode="true" disabled="true"><a>VB</a></div></div><div id="ID0EAAAAEAAABAA_codecollection" class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAAEAAABAA_copycode" href="#" onclick="javascript:CopyToClipboard('ID0EAAAAEAAABAA','4')" title="Copy to Clipboard">Copy to Clipboard</a><a id="ID0EAAAAEAAABAA_PrintText" class="OH_PrintText" href="#" onclick="javascript:Print('ID0EAAAAEAAABAA','4')" title="Print">Print</a></div></div><div id="ID0EAAAAEAAABAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre>[Export(<span class="highlight-keyword">typeof</span>(ICommenterProvider))]
[ContentType(<span class="highlight-literal">"SimpleC"</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> SimpleCCommenterProvider : ICommenterProvider
{
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> LineCommentFormat LineCommentFormat =
        <span class="highlight-keyword">new</span> LineCommentFormat(<span class="highlight-literal">"//"</span>);
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> BlockCommentFormat BlockCommentFormat =
        <span class="highlight-keyword">new</span> BlockCommentFormat(<span class="highlight-literal">"/*"</span>, <span class="highlight-literal">"*/"</span>);

    [Import]
    <span class="highlight-keyword">private</span> ITextUndoHistoryRegistry TextUndoHistoryRegistry
    {
        <span class="highlight-keyword">get</span>;
        <span class="highlight-keyword">set</span>;
    }

    <span class="highlight-keyword">public</span> ICommenter GetCommenter(ITextView textView)
    {
        Func&lt;Commenter&gt; factory =
            () =&gt; <span class="highlight-keyword">new</span> Commenter(textView, TextUndoHistoryRegistry, LineCommentFormat, BlockCommentFormat);
        <span class="highlight-keyword">return</span> textView.Properties.GetOrCreateSingletonProperty&lt;Commenter&gt;(factory);
    }
}</pre></div><div id="ID0EAAAAEAAABAA_code_Plain_Div1" class="codeSnippetContainerCode" style="display: none"><pre>[Export(typeof(ICommenterProvider))]
[ContentType("SimpleC")]
public sealed class SimpleCCommenterProvider : ICommenterProvider
{
    private static readonly LineCommentFormat LineCommentFormat =
        new LineCommentFormat("//");
    private static readonly BlockCommentFormat BlockCommentFormat =
        new BlockCommentFormat("/*", "*/");

    [Import]
    private ITextUndoHistoryRegistry TextUndoHistoryRegistry
    {
        get;
        set;
    }

    public ICommenter GetCommenter(ITextView textView)
    {
        Func&lt;Commenter&gt; factory =
            () =&gt; new Commenter(textView, TextUndoHistoryRegistry, LineCommentFormat, BlockCommentFormat);
        return textView.Properties.GetOrCreateSingletonProperty&lt;Commenter&gt;(factory);
    }
}</pre></div><div id="ID0EAAAAEAAABAA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EAAAAEAAABAA_code_Plain_Div2" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EAAAAEAAABAA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EAAAAEAAABAA_code_Plain_Div3" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EAAAAEAAABAA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre></pre></div><div id="ID0EAAAAEAAABAA_code_Plain_Div4" class="codeSnippetContainerCode" style="display: none"><pre></pre></div></div></div><script>addSpecificTextLanguageTagSet('ID0EAAAAEAAABAA');</script></li></ol></div><a id="Implementation"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">Implementation Details</div></div><p>
          Since this extension exports a new MEF service for use across multiple extensions and multiple versions of
          Visual Studio, extremely careful consideration must be given to several implementation details to ensure
          consumers will not encounter conflicts in the future or be <a href="http://blogs.msdn.com/b/jaredpar/archive/2012/05/07/authoring-a-utility-library-for-visual-studio.aspx" target="_blank">subjected to cumbersome workarounds</a>.
        </p><ul><li><p><strong>Assembly Versioning:</strong> To ensure long-term compatibility of this extension with many other
              extensions, all communication between the MEF-exported Output Window service and consumers of the API is performed
              through a dedicated interfaces assembly, <span class="code">Tvl.VisualStudio.OutputWindow.Interfaces</span>. Following
              the initial release of this extension, the contracts defined by this assembly (e.g. the strong name and API) will
              <em>never change</em>. If the source for this assembly is ever updated, it will only be in ways
              that are guaranteed to not cause problems for existing installations, such as updated XML documentation or updating
              the NuGet packaging to simplify the installation process.
            </p></li><li><p><strong>Assembly Binding:</strong> Since the <span class="code">Tvl.VisualStudio.OutputWindow.Interfaces</span>
              assembly does not appear in a <span class="code">&lt;MefComponent&gt;</span> element within <em>source.extension.vsixmanifest</em>,
              there are a number of situations with traditional deployments where Visual Studio may be unable to locate the assembly
              at runtime. To avoid this situation, the <span class="code">Tvl.VisualStudio.OutputWindow</span> extension created
              for the implementation of the Output Window Service registers its installation folder in the Visual Studio binding path
              using the <span class="code">[ProvideBindingPath]</span> registration attribute. This feature ensures that the
              Output Window interfaces assembly will be available to all Visual Studio extensions, regardless of the manner in which
              they are deployed.
            </p></li></ul><a name="seeAlsoSection"></a><div class="OH_CollapsibleAreaRegion"><div class="OH_regiontitle">See Also</div></div><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenterProvider.htm">ICommenterProvider</a></div><div class="seeAlsoStyle"><a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenter.htm">ICommenter</a></div><div class="seeAlsoStyle"><a href="T_Tvl_VisualStudio_Text_Commenter_Commenter.htm">Commenter</a></div></div></div></div></div><div id="OH_footer" class="OH_footer"></div><script src="//code.jquery.com/jquery-1.11.0.min.js"></script><script type="text/javascript">$(document).ready(function () {DocumentReady();});</script></body></html>