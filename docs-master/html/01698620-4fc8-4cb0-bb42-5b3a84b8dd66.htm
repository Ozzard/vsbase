<!DOCTYPE html ><html><head><META http-equiv="Content-Type" content="text/html; charset=utf-8"><meta charset="utf-8"><link rel="shortcut icon" href="../icons/favicon.ico"><link rel="stylesheet" type="text/css" href="../styles/branding.css"><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css"><script type="text/javascript" src="../scripts/branding.js"> </script><title>Commenter Service</title><meta name="Language" content="en-us"><meta name="Microsoft.Help.Id" content="01698620-4fc8-4cb0-bb42-5b3a84b8dd66"><meta name="Description" content="The Commenter package provides support for extensions to support the Comment and Uncomment commands in Visual Studio using MEF."><meta name="Microsoft.Help.ContentType" content="Concepts"><meta name="BrandingAware" content="true"><link type="text/css" rel="stylesheet" href="../styles/highlight.css"><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css"><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle"><div class="pageHeader" id="PageHeader">Tunnel Vision Labs' Base Extensions Library for Visual Studio<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="262e0a6e-ce5a-4f40-8f5e-3889dbb63784.htm" title="Tunnel Vision Labs' Base Extensions Library for Visual Studio" tocid="roottoc">Tunnel Vision Labs' Base Extensions Library for Visual Studio</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="69c59220-5eff-4177-a632-b7c1b4981501.htm" title="Packages" tocid="69c59220-5eff-4177-a632-b7c1b4981501">Packages</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!"></a><a data-tochassubtree="true" href="c2cfc56d-e966-492a-9b12-66c7d01e7146.htm" title="Shell Service Extensions" tocid="c2cfc56d-e966-492a-9b12-66c7d01e7146">Shell Service Extensions</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9452cedb-1942-4d9b-b911-7ef1e882f421.htm" title="Output Window Service" tocid="9452cedb-1942-4d9b-b911-7ef1e882f421">Output Window Service</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="3d25ef44-296a-4523-8286-ce65f8b47c76.htm" title="Shell Utility Library" tocid="3d25ef44-296a-4523-8286-ce65f8b47c76">Shell Utility Library</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="07a54f98-14af-49e8-96b4-7a15a7fcfe2d.htm" title="Text Editor Utility Library" tocid="07a54f98-14af-49e8-96b4-7a15a7fcfe2d">Text Editor Utility Library</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="01698620-4fc8-4cb0-bb42-5b3a84b8dd66.htm" title="Commenter Service" tocid="01698620-4fc8-4cb0-bb42-5b3a84b8dd66">Commenter Service</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize"><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize"></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png"></td><td class="titleColumn">Commenter Service</td></tr></table><span class="introStyle"></span><div class="introduction"><p>
        The Commenter package provides support for extensions to support the Comment and Uncomment
        commands in Visual Studio using MEF.
      </p><p>
        Library Status: Public
      </p></div><div class="collapsibleAreaRegion" id="Installation"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png">Installation and Distribution</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          To ensure broad compatibility across a wide range of project configurations and Visual Studio versions, the
          Commenter Service is distributed through several different NuGet packages.
        </p><ul><li><p><a href="#ExtensionPackage">Commenter Service Extension</a>: Installation of this package
              is required to ensure the Commenter Service functionality is available to your extension within Visual
              Studio.
            </p></li><li><p><a href="#InterfacesPackage">Commenter Interfaces Library</a>: Installation of this package
              is required if your project uses or provides any Commenter functionality.
            </p></li><li><p><a href="#CommenterUtility">Commenter Utility Library</a>: Installation of this package is
              optional, as described below.
            </p></li></ul><h4 class="subHeading" id="ExtensionPackage">Commenter Service Extension</h4><div class="subsection"><p>
              In the project which creates your VSIX file (i.e. the project which contains the <em>source.extension.vsixmanifest</em>
              file, add a NuGet reference to the <span class="code">Tvl.VisualStudio.Commenter</span> package. After installing the NuGet package,
              you will need to configure your extension to inform Visual Studio of the dependency by including the following block in your
              <em>source.extension.vsixmanifest</em> file.
            </p><div class="alert"><table><tr><th><img src="../icons/AlertCaution.png" alt="Important note"> Important</th></tr><tr><td><p>
                At this time, two versions of the VSIX manifest file are available. Make sure to use the code snippet
                relevant to the version used by your project. A version 1 manifest starts with
                <span class="code">&lt;Vsix Version="1.0.0"</span>, and a version 2 manifest starts with
                <span class="code">&lt;PackageManifest Version="2.0.0"</span>.
              </p></td></tr></table></div><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACACADAAA_tab1" class="codeSnippetContainerTabSingle">Version 1 Manifest</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACACADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EACACADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACACADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Reference</span> <span class="highlight-xml-attribute-name">Id</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Tvl.VisualStudio.Commenter.F3FD3E6D-611C-4703-B160-0C425AAFBACF"</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Name</span><span class="highlight-xml-bracket">&gt;</span>Visual Studio Commenter Services<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Name</span><span class="highlight-xml-bracket">&gt;</span>
  <span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">VsixPath</span><span class="highlight-xml-bracket">&gt;</span>Tvl.VisualStudio.Commenter.vsix<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">VsixPath</span><span class="highlight-xml-bracket">&gt;</span>
<span class="highlight-xml-bracket">&lt;/</span><span class="highlight-xml-tag">Reference</span><span class="highlight-xml-bracket">&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACACADAAA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABACADAAA_tab1" class="codeSnippetContainerTabSingle">Version 2 Manifest</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABACADAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EABACADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABACADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-xml-bracket">&lt;</span><span class="highlight-xml-tag">Dependency</span> <span class="highlight-xml-attribute-name">d:Source</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"File"</span>
  <span class="highlight-xml-attribute-name">DisplayName</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Visual Studio Commenter Services"</span>
  <span class="highlight-xml-attribute-name">Id</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Tvl.VisualStudio.Commenter.F3FD3E6D-611C-4703-B160-0C425AAFBACF"</span>
  <span class="highlight-xml-attribute-name">Version</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"[1.0.0,)"</span>
  <span class="highlight-xml-attribute-name">d:InstallSource</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Embed"</span>
  <span class="highlight-xml-attribute-name">Location</span><span class="highlight-xml-attribute-equal">=</span><span class="highlight-xml-attribute-value">"Tvl.VisualStudio.Commenter.vsix"</span> <span class="highlight-xml-bracket">/&gt;</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABACADAAA");</script><div class="alert"><table><tr><th><img src="../icons/AlertNote.png" alt="Note"> Note</th></tr><tr><td><p>
                A future release of this extension may include a feature to configure the <em>source.extension.vsixmanifest</em>
                file automatically.
              </p></td></tr></table></div></div><h4 class="subHeading" id="InterfacesPackage">Commenter Interfaces Library</h4><div class="subsection"><p>
              The Commenter Interfaces Library should be installed in any package which uses the Commenter Service. The
              library is available in the <span class="code">Tvl.VisualStudio.Commenter.Interfaces</span> NuGet package,
              which supports extensions targeting any combination of Visual Studio versions starting with 2010.
            </p></div><h4 class="subHeading" id="CommenterUtility">Commenter Utility Library</h4><div class="subsection"><p>
              The Commenter Utility Library includes a default implementation of
              <a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenter.htm">ICommenter</a> which
              is suitable for most languages that use line and/or block comments. The installation instructions for this
              utility library should be followed for any project which needs to export a standard commenter component
              for a new content type.
            </p></div></div><div class="collapsibleAreaRegion" id="Use"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png">Using the Commenter Service</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          This service allows extension developers to easily support the Comment and Uncomment commands
          for new languages in Visual Studio.
        </p><h4 class="subHeading">Providing a Standard Commenter</h4><div class="subsection"><p>
              The easiest way to provide commenting features is to use the standard
              <a href="T_Tvl_VisualStudio_Text_Commenter_FormatCommenter.htm">FormatCommenter</a>
              implementation of the
              <a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenter.htm">ICommenter</a>
              interface. The following steps show how to create an instance of
              <a href="T_Tvl_VisualStudio_Text_Commenter_FormatCommenter.htm">FormatCommenter</a>
              and provide it to the Commenter Service by exporting an instance of
              <a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenterProvider.htm">ICommenterProvider</a>.
            </p><ol><li><p>
                  Create a new class derived from
                  <a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenterProvider.htm">ICommenterProvider</a>.
                  This class is exported using the MEF
                  <a href="http://msdn2.microsoft.com/en-us/library/dd234971" target="_blank">ExportAttribute</a>
                  for one or more specific content types using the
                  <a href="http://msdn2.microsoft.com/en-us/library/dd821104" target="_blank">ContentTypeAttribute</a>.
                  The commenter in the example supports C++-style line and block comments, for the
                  <span class="code">SimpleC</span> content type.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAACAABACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAACAABACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAACAABACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAACAABACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[Export(<span class="highlight-keyword">typeof</span>(ICommenterProvider))]
[ContentType(<span class="highlight-literal">"SimpleC"</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> SimpleCCommenterProvider : ICommenterProvider
{
    <span class="highlight-keyword">public</span> ICommenter TryCreateCommenter(ITextBuffer textBuffer)
    {
        <span class="highlight-comment">// TODO: provide a commenter</span>
        <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> NotImplementedException();
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAACAABACAAA");</script></li><li><p>
                  Define the comment format(s) the commenter will support.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABAABACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABAABACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAABAABACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABAABACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> LineCommentFormat LineCommentFormat =
    <span class="highlight-keyword">new</span> LineCommentFormat(<span class="highlight-literal">"//"</span>);
<span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> BlockCommentFormat BlockCommentFormat =
    <span class="highlight-keyword">new</span> BlockCommentFormat(<span class="highlight-literal">"/*"</span>, <span class="highlight-literal">"*/"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABAABACAAA");</script></li><li><p>
                  Implement the
                  <a href="M_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenterProvider_TryCreateCommenter.htm">TryCreateCommenter(ITextBuffer)</a>
                  method by returning an instance of
                  <a href="T_Tvl_VisualStudio_Text_Commenter_FormatCommenter.htm">FormatCommenter</a>. The
                  following code is the complete implementation of
                  <a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenterProvider.htm">ICommenterProvider</a>
                  required to support the Comment and Uncomment commands for a simple language.
                </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAAABACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAAABACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAAAABACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAAABACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[Export(<span class="highlight-keyword">typeof</span>(ICommenterProvider))]
[ContentType(<span class="highlight-literal">"SimpleC"</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> SimpleCCommenterProvider : ICommenterProvider
{
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> LineCommentFormat LineCommentFormat =
        <span class="highlight-keyword">new</span> LineCommentFormat(<span class="highlight-literal">"//"</span>);
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> BlockCommentFormat BlockCommentFormat =
        <span class="highlight-keyword">new</span> BlockCommentFormat(<span class="highlight-literal">"/*"</span>, <span class="highlight-literal">"*/"</span>);

    <span class="highlight-keyword">public</span> ICommenter TryCreateCommenter(ITextBuffer textBuffer)
    {
        Func&lt;FormatCommenter&gt; factory =
            () =&gt; <span class="highlight-keyword">new</span> FormatCommenter(textBuffer, LineCommentFormat, BlockCommentFormat);
        <span class="highlight-keyword">return</span> textBuffer.Properties.GetOrCreateSingletonProperty(factory);
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAAABACAAA");</script></li></ol></div><h4 class="subHeading">Providing a Commenter for a Language Without Block Comments</h4><div class="subsection"><p>
              The standard commenter supports any combination of line and/or block comments. The following example shows
              a class which provides a commenter for Visual Basic files, which supports line comments but not block
              comments.
            </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAAAACAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAAAACAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAAAACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAAAACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[Export(<span class="highlight-keyword">typeof</span>(ICommenterProvider))]
[ContentType(<span class="highlight-literal">"SimpleVB"</span>)]
<span class="highlight-keyword">public</span> <span class="highlight-keyword">sealed</span> <span class="highlight-keyword">class</span> SimpleBatCommenterProvider : ICommenterProvider
{
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">readonly</span> LineCommentFormat LineCommentFormat =
        <span class="highlight-keyword">new</span> LineCommentFormat(<span class="highlight-literal">"'"</span>);

    <span class="highlight-keyword">public</span> ICommenter TryCreateCommenter(ITextBuffer textBuffer)
    {
        Func&lt;FormatCommenter&gt; factory =
            () =&gt; <span class="highlight-keyword">new</span> FormatCommenter(textBuffer, LineCommentFormat);
        <span class="highlight-keyword">return</span> textBuffer.Properties.GetOrCreateSingletonProperty(factory);
    }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAAAACAAA");</script></div></div><div class="collapsibleAreaRegion" id="Implementation"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png">Implementation Details</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
          Since this extension exports a new MEF service for use across multiple extensions and multiple versions of
          Visual Studio, extremely careful consideration must be given to several implementation details to ensure
          consumers will not encounter conflicts in the future or be <a href="http://blogs.msdn.com/b/jaredpar/archive/2012/05/07/authoring-a-utility-library-for-visual-studio.aspx" target="_blank">subjected to cumbersome workarounds</a>.
        </p><ul><li><p><strong>Assembly Versioning:</strong> To ensure long-term compatibility of this extension with many other
              extensions, all communication between the MEF-exported Commenter service and consumers of the API is performed
              through a dedicated interfaces assembly, <span class="code">Tvl.VisualStudio.Commenter.Interfaces</span>. Following
              the initial release of this extension, the contracts defined by this assembly (e.g. the strong name and API) will
              <em>never change</em>. If the source for this assembly is ever updated, it will only be in ways
              that are guaranteed to not cause problems for existing installations, such as updated XML documentation or updating
              the NuGet packaging to simplify the installation process.
            </p></li><li><p><strong>Assembly Binding:</strong> Since the <span class="code">Tvl.VisualStudio.Commenter.Interfaces</span>
              assembly does not appear in a <span class="code">&lt;MefComponent&gt;</span> element within <em>source.extension.vsixmanifest</em>,
              there are a number of situations with traditional deployments where Visual Studio may be unable to locate the assembly
              at runtime. To avoid this situation, the <span class="code">Tvl.VisualStudio.Commenter</span> extension created
              for the implementation of the Commenter Service registers its installation folder in the Visual Studio binding path
              using the <span class="code">[ProvideBindingPath]</span> registration attribute. This feature ensures that the
              Commenter interfaces assembly will be available to all Visual Studio extensions, regardless of the manner in which
              they are deployed.
            </p></li></ul></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png">See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenterProvider.htm">ICommenterProvider</a></div><div class="seeAlsoStyle"><a href="T_Tvl_VisualStudio_Text_Commenter_Interfaces_ICommenter.htm">ICommenter</a></div><div class="seeAlsoStyle"><a href="T_Tvl_VisualStudio_Text_Commenter_FormatCommenter.htm">FormatCommenter</a></div></div></div></div><div id="pageFooter" class="pageFooter"></div></body></html>